
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          NODE_ENV: production

      - name: Create .nojekyll file
        run: touch ./dist/.nojekyll

      - name: Create CNAME file (if needed)
        run: |
          if [ ! -z "${{ vars.CUSTOM_DOMAIN }}" ]; then
            echo "${{ vars.CUSTOM_DOMAIN }}" > ./dist/CNAME
          fi

      - name: Fix file permissions and MIME types
        run: |
          find ./dist -type f -name "*.js" -exec file {} \;
          find ./dist -type f -name "*.css" -exec file {} \;
          
      - name: List build files (debug)
        run: |
          echo "Build directory contents:"
          ls -la ./dist/
          echo "Assets directory contents:"
          ls -la ./dist/assets/ || echo "No assets directory found"
          echo "Checking for main files:"
          find ./dist -name "*.js" -o -name "*.css" | head -10

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
